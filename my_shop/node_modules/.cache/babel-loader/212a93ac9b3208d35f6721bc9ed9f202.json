{"remainingRequest":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js!F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\user\\Users.vue","mtime":1564545501942},{"path":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\item\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\item\\\\\\u5C31\\u4E1A\\u73ED\\\\day60-vuejs\\\\\\u7535\\u5546\\u9879\\u76EE\\\\3.\\u9879\\u76EE\\u5B9E\\u6218day1\\\\\\u7D20\\u6750\\\\my_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"F:\\\\item\\\\\\u5C31\\u4E1A\\u73ED\\\\day60-vuejs\\\\\\u7535\\u5546\\u9879\\u76EE\\\\3.\\u9879\\u76EE\\u5B9E\\u6218day1\\\\\\u7D20\\u6750\\\\my_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { users_api, usersType_api } from '@/api';\nimport { log } from 'util';\nexport default {\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      input: '',\n      tableData: [],\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 2\n      },\n      total: 0,\n      //   添加用户表单\n      userType: {},\n      addDialogFormVisible: false\n    }, _defineProperty(_ref, \"addDialogFormVisible\", false), _defineProperty(_ref, \"form\", {\n      name: '',\n      region: '',\n      date1: '',\n      date2: '',\n      delivery: false,\n      type: [],\n      resource: '',\n      desc: '',\n      formLabelWidth: '120px'\n    }), _ref;\n  },\n  methods: {\n    //获取用户列表函数\n    getUsers: function () {\n      var _getUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.input);\n                this.queryInfo.query = this.input;\n                _context.next = 4;\n                return users_api(this.queryInfo);\n\n              case 4:\n                _ref2 = _context.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status != 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取用户数据列表失败'));\n\n              case 8:\n                this.$message.success('获取用户数据列表成功');\n                this.tableData = res.data.users;\n                this.total = res.data.total;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      // console.log(`每页 ${val} 条`);\n      this.queryInfo.pagesize = val;\n      this.getUsers();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`);\n      this.queryInfo.pagenum = val;\n      this.getUsers();\n    },\n    userStateChanged: function () {\n      var _userStateChanged = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(row) {\n        var _ref3, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return usersType_api({\n                  id: row.id,\n                  type: row.mg_state\n                });\n\n              case 2:\n                _ref3 = _context2.sent;\n                res = _ref3.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function userStateChanged(_x) {\n        return _userStateChanged.apply(this, arguments);\n      }\n\n      return userStateChanged;\n    }()\n  },\n  created: function created() {\n    this.getUsers(); //调取获取用户列表函数\n  }\n};",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA,SAAA,SAAA,EAAA,aAAA,QAAA,OAAA;AACA,SAAA,GAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AAAA;;AACA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAHA;AAQA,MAAA,KAAA,EAAA,CARA;AASA;AACA,MAAA,QAAA,EAAA,EAVA;AAWA,MAAA,oBAAA,EAAA;AAXA,qDAYA,KAZA,iCAaA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,IAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,IAAA,EAAA,EARA;AASA,MAAA,cAAA,EAAA;AATA,KAbA;AAyBA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,qBAAA,SAAA,CAAA,KAAA,GAAA,KAAA,KAAA;AAJA;AAAA,uBAKA,SAAA,CAAA,KAAA,SAAA,CALA;;AAAA;AAAA;AAKA,gBAAA,GALA,SAKA,IALA;;AAAA,sBAQA,GAAA,CAAA,IAAA,CAAA,MAAA,IAAA,GARA;AAAA;AAAA;AAAA;;AAAA,iDASA,KAAA,QAAA,CAAA,KAAA,CAAA,YAAA,CATA;;AAAA;AAUA,qBAAA,QAAA,CAAA,OAAA,CAAA,YAAA;AACA,qBAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcA,IAAA,gBAdA,4BAcA,GAdA,EAcA;AACA;AACA,WAAA,SAAA,CAAA,QAAA,GAAA,GAAA;AACA,WAAA,QAAA;AACA,KAlBA;AAmBA,IAAA,mBAnBA,+BAmBA,GAnBA,EAmBA;AACA;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,GAAA;AACA,WAAA,QAAA;AACA,KAvBA;AAwBA,IAAA,gBAxBA;AAAA;AAAA;AAAA,gDAwBA,GAxBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0BA,aAAA,CAAA;AACA,kBAAA,EAAA,EAAA,GAAA,CAAA,EADA;AAEA,kBAAA,IAAA,EAAA,GAAA,CAAA;AAFA,iBAAA,CA1BA;;AAAA;AAAA;AA0BA,gBAAA,GA1BA,SA0BA,IA1BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GA5BA;AA4DA,EAAA,OA5DA,qBA4DA;AACA,SAAA,QAAA,GADA,CACA;AACA;AA9DA,CAAA","sourcesContent":["<template>\r\n  <div class=\"User_list\">\r\n    <el-breadcrumb separator=\">\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <div class=\"text item\">\r\n        <el-input\r\n          clearable\r\n          @clear=\"getUsers\"\r\n          v-model=\"input\"\r\n          placeholder=\"请输入内容\"\r\n          style=\"width: 30%;\"\r\n        >\r\n          <el-button @click=\"getUsers\" slot=\"append\" icon=\"el-icon-search\"></el-button>\r\n        </el-input>\r\n        <el-button type=\"success\" style class=\"search_button\" @click=\"addDialogFormVisible = true\">添加用户</el-button>\r\n      </div>\r\n      <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"#\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"mobile\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"role_name\" label=\"角色\"></el-table-column>\r\n        <el-table-column prop=\"mg_state\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row }} -->\r\n            <el-switch\r\n              @change=\"userStateChanged(scope.row)\"\r\n              v-model=\"scope.row.mg_state\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"address\" label=\"操作\" style=\"width: 180px;\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"></el-button>\r\n            <!-- 删除按钮 -->\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\r\n            <!-- 分配角色按钮 -->\r\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"block\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"queryInfo.pagenum\"\r\n          :page-sizes=\"[2, 5, 10, 20]\"\r\n          :page-size=\"queryInfo.pagesize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n        ></el-pagination>\r\n      </div>\r\n\r\n      <!-- 添加用户弹框 -->\r\n      <el-dialog title=\"收货地址\" :visible.sync=\"addDialogFormVisible\">\r\n        <el-form :model=\"form\">\r\n          <el-form-item label=\"活动名称\" :label-width=\"formLabelWidth\">\r\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"活动区域\" :label-width=\"formLabelWidth\">\r\n            <el-select v-model=\"form.region\" placeholder=\"请选择活动区域\">\r\n              <el-option label=\"区域一\" value=\"shanghai\"></el-option>\r\n              <el-option label=\"区域二\" value=\"beijing\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogFormVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addDialogFormVisible = false\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { users_api, usersType_api } from '@/api'\r\nimport { log } from 'util'\r\nexport default {\r\n  data() {\r\n    return {\r\n      input: '',\r\n      tableData: [],\r\n      queryInfo: {\r\n        query: '',\r\n        pagenum: 1,\r\n        pagesize: 2\r\n      },\r\n\t  total: 0,\r\n\t//   添加用户表单\r\n\t  userType: {},\r\n\t  addDialogFormVisible: false,\r\n        addDialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n\t\t  desc: '',\r\n\t\t  formLabelWidth: '120px'\r\n        },\r\n    }\r\n  },\r\n  methods: {\r\n    //获取用户列表函数\r\n    async getUsers() {\r\n      console.log(this.input)\r\n      this.queryInfo.query = this.input\r\n      const { data: res } = await users_api(this.queryInfo)\r\n      // console.log(this.queryInfo);\r\n      // console.log(res);\r\n      if (res.meta.status != 200)\r\n        return this.$message.error('获取用户数据列表失败')\r\n      this.$message.success('获取用户数据列表成功')\r\n      this.tableData = res.data.users\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(val) {\r\n      // console.log(`每页 ${val} 条`);\r\n      this.queryInfo.pagesize = val\r\n      this.getUsers()\r\n    },\r\n    handleCurrentChange(val) {\r\n      // console.log(`当前页: ${val}`);\r\n      this.queryInfo.pagenum = val\r\n      this.getUsers()\r\n    },\r\n    async userStateChanged(row) {\r\n      //改变状态函数\r\n      const { data: res } = await usersType_api({\r\n        id: row.id,\r\n        type: row.mg_state\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.getUsers() //调取获取用户列表函数\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.text {\r\n  font-size: 14px;\r\n}\r\n\r\n.item {\r\n  padding: 18px 0;\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  .search_button {\r\n    margin-left: 20px;\r\n    background-color: #409eff;\r\n    border: 0;\r\n  }\r\n}\r\n.el-button--mini,\r\n.el-button--mini.is-round {\r\n  padding: 6px 10px !important;\r\n}\r\n</style>\r\n<style></style>\r\n"],"sourceRoot":"src/components/user"}]}